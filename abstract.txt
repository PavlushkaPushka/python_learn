..............................Объекты..........................

Объект это экземпляр класса
Класс это шаблон, или прототип для создания объектов
На основании одного класса можно создавать много разных объектов

У каждого объекта есть атрибуты
Атрибут объекта называется методом, если его значение - функция
Метод как и любую функцию, можно вызывать




...........................Основные типы..........................

Строка - str
Целое число - int (целым числом является 10, кроме того, к целым числам относят отрицательные числа, и ноль)
Логический тип - bool
Список - list ("[1, 2, 3]") //похож на массив в js
Словарь - dict ("{'min': 7, 'max': 8}" - пара ключ - значение) //похож на объект в js - или на кое что другое где в объекте имеется пара ключ и значение



.........................Встроенные функции........................

input("Enter your name") - пользователь может ввести данные, input всегда возвращает строку

dir('') - возвращает названия всех атрибутов объекта
Атрибуты объекта доступны с помощью "." // как и в js


....................................Отступы........................

Отступы являются неотъемлемой частью языка

Документ регламентирующий правила написания кода называется - PEP8 (PYTHON ENHANCEMENT PROPOSAL - ПРЕДЛОЖЕНИЯ ПО УЛУЧШЕНИЮ ПАЙТОН) - Стилевой гайд
https://peps.python.org/pep-0008/

Выдержки:
 - для отступов используются пробелы а не Tab
 - длина строк должна быть не более 79 символов
 - функции и классы должны быть отделены от других строк кода двумя пустыми строками
 - импорты модулей должны быть на отдельных строках
 - комментарии в конце строки кода должны отделяться по крайней мере двумя пробелами





.............................форматирование кода ...................






..............................Полезности...........................

{'min': 7, 'max': 8} - правильное написание объекта, ключ в объекте указывать в одинарных кавычках

Если слово в строке одно, указываем одинарные кавычки, если больше, то двойные
"Hello world"
'Pavel'

ctrl+shift+k = удалить строку

builtins - переводится как "встроенные функции"


ls - посмотреть папки в терминале

pwd - посмотреть путь до текущей директории в терминале

__add__ - Магические методы? не вызываются напрямую, они вызываются как следствие использования операторов в питоне

shift+alt+down = скопировать строку

комментарии к коду должны описывать его цель, а не то, как он работает



..............................Выражения...........................

результатом выражения является какое либо одно значение определенного типа
результат выражения можно использовать в вызове функции, либо для того что б присвоить ее результат другой переменной

5 + 3 # 8 - сумма значений - результат выражения
5 > 3
'Hello' + 'World'

my_func(10, 5) - вызов функции так же выражение, т.к. возвращает определенное значение




..............................Инструкции...........................

инструкция создает действие, функцию, цикл, с помощью инструкций можно вернуть результат функции, импортировать модулей

примеры:
 - присвоение значение
 - условная инструкция
 - импортирование модуля
 - объявление функции
 - return




..............................Переменные...........................

snake_case - переменные, функции, методы, модули, все в нижнем регистре с нижним подчеркиванием между словами
PascalCase - классы
my-package - пакеты - модули можно объединять в пакеты
DB_PASSWORD - константы

в питоне нет различий между константами и переменными, индикатором является наименование
названия переменных должны быть понятны, даже если имя получается длинное

Если в переменное просто значение либо какие то данные, называем существительным, если какие либо действия (напр. функция или метод), то ее название должно быть глаголом


....................Типы и структуры данных...........................

в пайтоне отсутствуют примитивные типы, все сущности являются объектами, даже строки, числа, булевы



хороший пример: допустим мы объявили две переменных с целыми числами, они лишь являются экземплярами класса инт, при этом две эти переменные независимы друг от друга

в пайтоне существуют изменяемые и не изменяемые объекты
изменяемые - mutable
неизменяемые - inmutable